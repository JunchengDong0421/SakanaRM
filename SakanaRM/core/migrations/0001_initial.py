# Generated by Django 4.2.11 on 2024-07-02 07:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Paper",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.TextField()),
                ("file_path", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.sakanauser",
                    ),
                ),
            ],
            options={"ordering": ["title"],},
        ),
        migrations.CreateModel(
            name="Workflow",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="Untitled Workflow", max_length=100)),
                (
                    "work_type",
                    models.IntegerField(
                        choices=[(0, "upload"), (1, "process"), (2, "other")], default=2
                    ),
                ),
                ("instructions", models.TextField()),
                (
                    "stage",
                    models.IntegerField(
                        choices=[
                            (0, "start"),
                            (1, "uploading"),
                            (2, "retrieving"),
                            (3, "processing"),
                            (4, "tagging"),
                            (5, "end"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "pending"),
                            (1, "completed"),
                            (2, "failed"),
                            (3, "aborted"),
                        ],
                        default=0,
                    ),
                ),
                ("messages", models.TextField()),
                ("result", models.TextField(default="{}")),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("is_archived", models.BooleanField(default=False)),
                (
                    "paper",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.paper",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.sakanauser",
                    ),
                ),
            ],
            options={"ordering": ["-last_updated"],},
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("definition", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "adder",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.sakanauser",
                    ),
                ),
            ],
            options={"ordering": ["name"],},
        ),
        migrations.AddField(
            model_name="paper",
            name="tags",
            field=models.ManyToManyField(to="core.tag"),
        ),
    ]
